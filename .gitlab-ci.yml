default:
  image: node:16-alpine
  before_script:
    - apk add --no-cache libc6-compat

variables:
  HOST: "84.201.142.197"

cache:
  paths:
    - node_modules/

stages:
  - build
  - test
  - image-push
  - deploy

build-job:
  stage: build
  before_script:
    - npm ci --cache .npm --prefer-offline
  script:
    - npm run build

unit-test-job:
  stage: test
  before_script:
    - npm ci --cache .npm --prefer-offline
  script:
    - echo "Start unit tests"
    - echo "Done!"

intg-test-job:
  stage: test
  before_script:
    - npm ci --cache .npm --prefer-offline
  script:
    - echo "Start integration tests"
    - echo "Done!"

image-push-job:
  stage: image-push
  image: docker:20.10.7
  only:
    - gitlab-ci
    - master
  services:
    - docker:20.10.7-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

deploy-job:
  stage: deploy
  image: docker:20.10.7
  only:
    - gitlab-ci
    - master
  services:
    - docker:20.10.7-dind
  variables:
    DOCKER_HOST: "tcp://${HOST}:2376"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "/certs"
  environment:
    url: https://ya-restorator.ru
    name: production
  before_script:
    - export BRANCH_TAG=$CI_COMMIT_REF_SLUG
    - mkdir -p $DOCKER_CERT_PATH
    - echo "$TLSCACERT" > $DOCKER_CERT_PATH/ca.pem
    - echo "$TLSCERT" > $DOCKER_CERT_PATH/cert.pem
    - echo "$TLSKEY" > $DOCKER_CERT_PATH/key.pem
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker stack deploy --with-registry-auth -c ./docker-compose.yml app
